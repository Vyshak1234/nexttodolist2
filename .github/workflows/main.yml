name: PR â€“ Create Alpha env when PR is raised

# Enable OIDC token permission
permissions:
  id-token: write
  contents: read

on:
  pull_request:
    branches: [main]

env:
  ARGOCD_APPLICATION: ${{ vars.ARGOCD_APPLICATION }}
  PR_NUMBER: ${{ github.event.pull_request.number }}

jobs:
  postgres-backup:
    name: Backup DB to S3
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::533260833584:role/gitactiontest
          role-session-name: github-actions-backup
          aws-region: us-east-1
          audience: sts.amazonaws.com

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --name vyshak-gitactiontest-01a2b3c4 --region us-east-1

      - name: Apply pg_dump job (with PR number)
        run: envsubst < .github/workflows/k8s/jobs/pg-backup-job.yaml | kubectl apply -f -
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}

  wait-for-s3:
    name: Wait for backup to upload
    needs: postgres-backup
    runs-on: ubuntu-latest
    steps:
      - name: Wait 30 seconds
        run: sleep 30

  postgres-restore:
    name: Restore DB from S3
    needs: wait-for-s3
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::533260833584:role/gitactiontest
          role-session-name: github-actions-restore
          aws-region: us-east-1
          audience: sts.amazonaws.com

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --name vyshak-gitactiontest-01a2b3c4 --region us-east-1

      - name: Apply pg_restore job (with PR number)
        run: envsubst < .github/workflows/k8s/jobs/pg-restore-job.yaml | kubectl apply -f -
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}

  build-image:
    name: Build and Push Images (Common ECR Account)
    runs-on: ubuntu-latest
    needs: postgres-restore
    outputs:
      ecr_registry: ${{ steps.login-ecr.outputs.registry }}
      image_repository: acceleraterapp
      image_tag: ${{ steps.set-tag.outputs.image_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::533260833584:role/gitactiontest
          role-session-name: github-actions-restore
          aws-region: us-east-1
          audience: sts.amazonaws.com

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --name vyshak-gitactiontest-01a2b3c4 --region us-east-1

      - name: Delete temporary pgdump and pgrestore jobs
        run: |
          kubectl delete job pgdump-upload-pr-${PR_NUMBER}-job --ignore-not-found
          kubectl delete job pgrestore-alpha-${PR_NUMBER}-job --ignore-not-found
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Set image tag
        id: set-tag
        run: echo "image_tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and push website backend image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: acceleraterapp
          IMAGE_TAG: ${{ steps.set-tag.outputs.image_tag }}
        run: |
          docker build -f Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:alpha-$IMAGE_TAG --no-cache .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:alpha-$IMAGE_TAG
