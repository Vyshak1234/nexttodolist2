apiVersion: batch/v1
kind: Job
metadata:
  name: pgrestore-alpha-${PR_NUMBER}-job
spec:
  template:
    spec:
      serviceAccountName: rds-backup-sa
      containers:
      - name: pgrestore
        image: postgres:17-alpine
        command: ["/bin/sh", "-c"]
        args:
        - |
          # Install awscli
          apk update && apk add --no-cache aws-cli &&
          # Load DB password from CSI secret
          export PGPASSWORD=$(cat /mnt/secrets-store/dbpassword) &&
          # Debug environment variables
          echo "=== Starting restore process ===" &&
          echo "Raw PR_NUMBER env var: '$PR_NUMBER'" &&
          # Set variables with explicit values
          PR_NUM="$PR_NUMBER" &&
          DB_NAME="alpha-$PR_NUM" &&
          DUMP_FILE="/tmp/demopg-PR-$PR_NUM.dump" &&
          echo "Processed PR Number: '$PR_NUM'" &&
          echo "Target Database: '$DB_NAME'" &&
          echo "Dump file: '$DUMP_FILE'" &&
          # Verify variables are not empty
          if [ -z "$PR_NUM" ]; then
            echo "ERROR: PR_NUMBER is empty!" &&
            exit 1
          fi &&
          # Create the database, ignore error if it already exists
          echo "Creating database: $DB_NAME" &&
          psql -h demopg.cod55klsl2aw.us-east-1.rds.amazonaws.com -U adminuser -d postgres \
            -c "CREATE DATABASE \"$DB_NAME\";" || echo "Database might already exist, continuing..." &&
          # Download dump from S3
          echo "Downloading dump for PR #$PR_NUM from S3..." &&
          aws s3 cp "s3://acceleraterapptest/demopg-PR-$PR_NUM.dump" "$DUMP_FILE" &&
          # Verify dump file exists and show size
          echo "Verifying dump file..." &&
          ls -la "$DUMP_FILE" &&
          # Restore database
          echo "Restoring database: $DB_NAME..." &&
          pg_restore -h demopg.cod55klsl2aw.us-east-1.rds.amazonaws.com -U adminuser -d "$DB_NAME" -v "$DUMP_FILE" &&
          echo "=== Restore completed successfully! ===" &&
          echo "Database $DB_NAME is ready for testing"
        env:
        - name: PR_NUMBER
          value: "${PR_NUMBER}"
        volumeMounts:
        - name: secrets-store-inline
          mountPath: "/mnt/secrets-store"
          readOnly: true
      restartPolicy: Never
      volumes:
      - name: secrets-store-inline
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "rds-secret-provider"
  backoffLimit: 1
